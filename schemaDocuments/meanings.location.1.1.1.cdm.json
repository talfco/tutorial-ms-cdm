{
  "documentVersion": "1.1.1",
  "$schema": "./schema.cdm.json",
  "jsonSchemaSemanticVersion": "1.0.0",
  "imports": [
    {
      "corpusPath": "/primitives.2.1.cdm.json"
    }
  ],
  "definitions": [
    {
      "traitName": "means.location",
      "extendsTrait": "means"
    },
    {
      "traitName": "means.location.address",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.address.building",
      "extendsTrait": "means.location.address"
    },
    {
      "traitName": "means.location.address.floor",
      "extendsTrait": "means.location.address"
    },
    {
      "traitName": "means.location.address.house",
      "extendsTrait": "means.location.address"
    },
    {
      "traitName": "means.location.address.room",
      "extendsTrait": "means.location.address"
    },
    {
      "traitName": "means.location.address.street",
      "extendsTrait": "means.location.address"
    },
    {
      "traitName": "means.location.address.street.line1",
      "extendsTrait": "means.location.address.street"
    },
    {
      "traitName": "means.location.address.street.line2",
      "extendsTrait": "means.location.address.street"
    },
    {
      "traitName": "means.location.address.street.line3",
      "extendsTrait": "means.location.address.street"
    },
    {
      "traitName": "means.location.city",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.continent",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.country",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.county",
      "extendsTrait": "means.location.address"
    },
    {
      "traitName": "means.location.latitude",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.longitude",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.point",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.postalCode",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.province",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.region",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.stateOrProvince",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.timezone",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.geo",
      "extendsTrait": "means.location"
    },
    {
      "traitName": "means.location.geo.boundary",
      "extendsTrait": "means.location.geo"
    },
    {
      "traitName": "means.location.geo.boundary.bottom",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.boundary.front",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.boundary.left",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.boundary.polygon",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.boundary.rear",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.boundary.right",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.boundary.top",
      "extendsTrait": "means.location.geo.boundary"
    },
    {
      "traitName": "means.location.geo.centroid",
      "extendsTrait": "means.location.geo"
    },
    {
      "traitName": "means.location.geo.centroid.X",
      "extendsTrait": "means.location.geo.centroid"
    },
    {
      "traitName": "means.location.geo.centroid.y",
      "extendsTrait": "means.location.geo.centroid"
    },
    {
      "traitName": "means.location.geo.centroid.z",
      "extendsTrait": "means.location.geo.centroid"
    },
    {
      "dataTypeName": "addressLine",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.address"
      ]
    },
    {
      "dataTypeName": "city",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.city"
      ]
    },
    {
      "dataTypeName": "country",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.country"
      ]
    },
    {
      "dataTypeName": "county",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.county"
      ]
    },
    {
      "dataTypeName": "latitude",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.location.latitude"
      ]
    },
    {
      "dataTypeName": "longitude",
      "extendsDataType": "double",
      "exhibitsTraits": [
        "means.location.longitude"
      ]
    },
    {
      "dataTypeName": "postalCode",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.postalCode"
      ]
    },
    {
      "dataTypeName": "stateOrProvince",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.stateOrProvince"
      ]
    },
    {
      "dataTypeName": "timezone",
      "extendsDataType": "string",
      "exhibitsTraits": [
        "means.location.timezone"
      ]
    },
    {
      "traitName": "is.inTimeZone",
      "extendsTrait": "is",
      "explanation": "the associated data is assumed to be in the specified time zone",
      "hasParameters": [
        {
          "name": "timeZoneName",
          "dataType": "timezone",
          "required": true,
          "explanation": "the name of a time zone"
        },
        {
          "name": "format",
          "dataType": "stringFormat",
          "required": true,
          "explanation": "the time zone naming scheme used for the timeZoneName parameter"
        }
      ]
    },
    {
      "traitName": "is.inTimeZone.MicrosoftFormat",
      "extendsTrait": {
        "traitReference": "is.inTimeZone",
        "arguments": [
          {
            "name": "format",
            "value": "MicrosoftFormat"
          }
        ]
      },
      "explanation": "the associated data is assumed to be in the specified time zone. timeZoneName value is a Microsoft standard time zone name. see https://support.microsoft.com/en-us/help/973627"
    },
    {
      "traitName": "is.inTimeZone.tzDatabaseFormat",
      "extendsTrait": {
        "traitReference": "is.inTimeZone",
        "arguments": [
          {
            "name": "format",
            "value": "tzDatabaseFormat"
          }
        ]
      },
      "explanation": "the associated data is assumed to be in the specified time zone. timeZoneName value is a Time Zone Database standard time zone name. see https://www.iana.org/time-zones"
    }
  ]
}